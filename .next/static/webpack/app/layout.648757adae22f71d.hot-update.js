"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteChatSession: function() { return /* binding */ deleteChatSession; },\n/* harmony export */   getChatSession: function() { return /* binding */ getChatSession; },\n/* harmony export */   getChatSessions: function() { return /* binding */ getChatSessions; },\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   resetPassword: function() { return /* binding */ resetPassword; },\n/* harmony export */   saveChatSession: function() { return /* binding */ saveChatSession; },\n/* harmony export */   signInWithEmail: function() { return /* binding */ signInWithEmail; },\n/* harmony export */   signInWithGitHub: function() { return /* binding */ signInWithGitHub; },\n/* harmony export */   signInWithGoogle: function() { return /* binding */ signInWithGoogle; },\n/* harmony export */   signOut: function() { return /* binding */ signOut; },\n/* harmony export */   signUpWithEmail: function() { return /* binding */ signUpWithEmail; },\n/* harmony export */   supabase: function() { return /* binding */ supabase; },\n/* harmony export */   updateChatSession: function() { return /* binding */ updateChatSession; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://xgzaoclpgxcngtyvitla.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhnemFvY2xwZ3hjbmd0eXZpdGxhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA5MjQ2MjIsImV4cCI6MjA2NjUwMDYyMn0.QT0-E-2mIOHCOK9oxGtN_OdI2RMDsVygH3fmrz-axLc\";\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Missing Supabase environment variables\");\n    console.log(\"SUPABASE_URL:\", supabaseUrl ? \"Present\" : \"Missing\");\n    console.log(\"SUPABASE_ANON_KEY:\", supabaseAnonKey ? \"Present\" : \"Missing\");\n}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true\n    }\n});\n// Auth helper functions\nconst signInWithGoogle = async ()=>{\n    const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: \"google\",\n        options: {\n            redirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n        }\n    });\n    return {\n        data,\n        error\n    };\n};\nconst signInWithGitHub = async ()=>{\n    const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: \"github\",\n        options: {\n            redirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n        }\n    });\n    return {\n        data,\n        error\n    };\n};\nconst signOut = async ()=>{\n    const { error } = await supabase.auth.signOut();\n    return {\n        error\n    };\n};\nconst getCurrentUser = async ()=>{\n    const { data: { user }, error } = await supabase.auth.getUser();\n    return {\n        user,\n        error\n    };\n};\n// Email authentication functions\nconst signUpWithEmail = async (email, password, fullName)=>{\n    const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n            data: {\n                full_name: fullName\n            }\n        }\n    });\n    return {\n        data,\n        error\n    };\n};\nconst signInWithEmail = async (email, password)=>{\n    const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n    });\n    return {\n        data,\n        error\n    };\n};\nconst resetPassword = async (email)=>{\n    const { data, error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: \"\".concat(window.location.origin, \"/auth/reset-password\")\n    });\n    return {\n        data,\n        error\n    };\n};\n// Chat history functions\nconst saveChatSession = async (userId, title, messages)=>{\n    const { data, error } = await supabase.from(\"chat_sessions\").insert({\n        user_id: userId,\n        title: title,\n        messages: messages,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    }).select().single();\n    return {\n        data,\n        error\n    };\n};\nconst updateChatSession = async (sessionId, title, messages)=>{\n    const { data, error } = await supabase.from(\"chat_sessions\").update({\n        title: title,\n        messages: messages,\n        updated_at: new Date().toISOString()\n    }).eq(\"id\", sessionId).select().single();\n    return {\n        data,\n        error\n    };\n};\nconst getChatSessions = async (userId)=>{\n    const { data, error } = await supabase.from(\"chat_sessions\").select(\"*\").eq(\"user_id\", userId).order(\"updated_at\", {\n        ascending: false\n    });\n    return {\n        data,\n        error\n    };\n};\nconst deleteChatSession = async (sessionId)=>{\n    const { data, error } = await supabase.from(\"chat_sessions\").delete().eq(\"id\", sessionId);\n    return {\n        data,\n        error\n    };\n};\nconst getChatSession = async (sessionId)=>{\n    const { data, error } = await supabase.from(\"chat_sessions\").select(\"*\").eq(\"id\", sessionId).single();\n    return {\n        data,\n        error\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase.js\n"));

/***/ })

});